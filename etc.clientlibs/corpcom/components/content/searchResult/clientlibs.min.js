/*

 bootpag - jQuery plugin for dynamic pagination

 Copyright (c) 2015 botmonster@7items.com

 Licensed under the MIT license:
 http://www.opensource.org/licenses/mit-license.php

 Project home:
 http://botmonster.com/jquery-bootpag/

 Version:  1.0.7

 */
(function(h,q){h.fn.bootpag=function(p){function m(c,b){b=parseInt(b,10);var d,e=0==a.maxVisible?1:a.maxVisible,k=1==a.maxVisible?0:1,n=Math.floor((b-1)/e)*e,f=c.find("li");a.page=b=0>b?0:b>a.total?a.total:b;f.removeClass(a.activeClass);d=1>b-1?1:a.leaps&&b-1>=a.maxVisible?Math.floor((b-1)/e)*e:b-1;a.firstLastUse&&f.first().toggleClass(a.disabledClass,1===b);e=f.first();a.firstLastUse&&(e=e.next());e.toggleClass(a.disabledClass,1===b).attr("data-lp",d).find("a").attr("href",g(d));k=1==a.maxVisible?
    0:1;d=b+1>a.total?a.total:a.leaps&&b+1<a.total-a.maxVisible?n+a.maxVisible+k:b+1;e=f.last();a.firstLastUse&&(e=e.prev());e.toggleClass(a.disabledClass,b===a.total).attr("data-lp",d).find("a").attr("href",g(d));f.last().toggleClass(a.disabledClass,b===a.total);e=f.filter("[data-lp="+b+"]");k="."+[a.nextClass,a.prevClass,a.firstClass,a.lastClass].join(",.");if(!e.not(k).length){var m=b<=n?-a.maxVisible:0;f.not(k).each(function(b){d=b+1+n+m;h(this).attr("data-lp",d).toggle(d<=a.total).find("a").html(d).attr("href",
    g(d))});e=f.filter("[data-lp="+b+"]")}e.not(k).addClass(a.activeClass);l.data("settings",a)}function g(c){return a.href.replace(a.hrefVariable,c)}var l=this,a=h.extend({total:0,page:1,maxVisible:null,leaps:!0,href:"javascript:void(0);",hrefVariable:"{{number}}",next:"&raquo;",prev:"&laquo;",firstLastUse:!1,first:'<span aria-hidden="true">&larr;</span>',last:'<span aria-hidden="true">&rarr;</span>',wrapClass:"pagination",activeClass:"active",disabledClass:"disabled",nextClass:"next",prevClass:"prev",
    lastClass:"last",firstClass:"first"},l.data("settings")||{},p||{});if(0>=a.total)return this;h.isNumeric(a.maxVisible)||a.maxVisible||(a.maxVisible=parseInt(a.total,10));l.data("settings",a);return this.each(function(){var c,b,d=h(this);c=['<ul class="',a.wrapClass,' bootpag">'];a.firstLastUse&&(c=c.concat(['<li data-lp="1" class="',a.firstClass,'"><a href="',g(1),'">',a.first,"</a></li>"]));a.prev&&(c=c.concat(['<li data-lp="1" class="',a.prevClass,'"><a href="',g(1),'">',a.prev,"</a></li>"]));for(b=
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                1;b<=Math.min(a.total,a.maxVisible);b++)c=c.concat(['<li data-lp="',b,'"><a href="',g(b),'">',b,"</a></li>"]);a.next&&(b=a.leaps&&a.total>a.maxVisible?Math.min(a.maxVisible+1,a.total):2,c=c.concat(['<li data-lp="',b,'" class="',a.nextClass,'"><a href="',g(b),'">',a.next,"</a></li>"]));a.firstLastUse&&(c=c.concat(['<li data-lp="',a.total,'" class="last"><a href="',g(a.total),'">',a.last,"</a></li>"]));c.push("</ul>");d.find("ul.bootpag").remove();d.append(c.join(""));c=d.find("ul.bootpag");d.find("li").click(function(){var b=
    h(this);if(!b.hasClass(a.disabledClass)&&!b.hasClass(a.activeClass)){var c=parseInt(b.attr("data-lp"),10);l.find("ul.bootpag").each(function(){m(h(this),c)});l.trigger("page",c)}});m(c,a.page)})}})(jQuery,window);
jQuery.curCSS = function(element, prop, val) {
    return jQuery(element).css(prop, val);
};

var dataBase = '', resourceLibPageURL = '', allFacetsStrFromURL = '',allfacetsdata='';
var idolSearchBar = (function(){
    var dataBases = [];
    var idolSearchServlet = '/corpcomsvc/search';
    var showMore = 'Show More';
    var showLess = 'Show Less';
	var configData = {};

    var didYoumean = function(newKeyword, db) {

        var strlUrl = window.location.href;
        var url = updateQueryStringParameter(strlUrl, 'q', newKeyword);
        var qValue = getParameterByName('q', url);
        $('#iSearch').val(qValue);

        var field = 'q';
        var inputParam = encodeURIComponent($("#iSearch").val());
        var newSrc = inputParam;
        var strlUrl = window.location.href;
        if(db ==undefined || db == null){
            var endsWith = strlUrl.slice(strlUrl.length - 1, strlUrl.length)
            if (endsWith == "=") { strlUrl = strlUrl.concat("#"); }

            if ((strlUrl.indexOf('?' + field + '=') != -1) || (strlUrl.indexOf('&' + field + '=') != -1)) {
                var newURL = updateQueryStringParameter(strlUrl, field, newSrc);
            }
            else if (strlUrl.indexOf('?') != -1) {
                var newURL = strlUrl + "&q=" + newSrc;
            }
            else { var newURL = strlUrl + "?q=" + newSrc; }
            window.location = newURL;
        }else{
        	if(db=="www")
                idolSearchBar.getSearchResults(1, db, encodeURIComponent($('#iSearch').val()),'',true);
                else
                idolSearchBar.getSearchResults(1, db, encodeURIComponent($('#iSearch').val()),'',true);
        }


        return true;
    };

    function displayDataBasesTab(db) {
        var dataBasesTabs = '';
        $.each( dataBases, function( i, val ) {
            dataBasesTabs +=
                '<li class="' + ((db == val.key) ? 'active':'') +'"><a href="#' + val.key + '" data-filter="' + val.key + '">' + val.name + '</a></li>';
        });

        $('#dataBases').html(dataBasesTabs);

        $("#dataBases li a").off('click').on('click', function (e) {
            e.preventDefault();
            $('#mfilters').attr('data-selected-filter', '');
            allfacetsdata=null;
            if($(this).attr("data-filter")=="www")
            idolSearchBar.getSearchResults(1, $(this).attr("data-filter"), encodeURIComponent($('#iSearch').val()),'',true);
            else
            idolSearchBar.getSearchResults(1, $(this).attr("data-filter"), encodeURIComponent($('#iSearch').val()),'',true);
        });
    }

    function displaySearchResult(resp, db) {
        var resultRows = '';
		var displayShowTop='';
        if (resp != null) {
			if( $("#totalSearchResultForAnalytics").length >0){    
                if(resp.TotalNumberOfResults != null && resp.TotalNumberOfResults !="") {
                    $("#totalSearchResultForAnalytics").val(resp.TotalNumberOfResults);
                }else{
                         $("#totalSearchResultForAnalytics").val(0);
                }
            }
			
			if (resp.SearchResult != null && resp.SearchResult.length > 0) {
			
				if(resp.PromotedResults != null && resp.PromotedResults[1].length > 0 ){
					$("#mClearFilter").show();
					$(".pagination").show();
					$.each(resp.PromotedResults[1], function (i, val) {									
							
							if(val.thumbnail != null && val.thumbnail != ""){																	
									 resultRows +=				
										 '<div style="background: url('+"'"+val.thumbnail+"')"+' no-repeat; background-size: 50px 50px; padding-left: 80px">';
							}		
										 resultRows +='<h3><a ';
								if(typeof(val.dataid) != "undefined"){ 
								resultRows +=' data-id ="' + val.dataid + '"';
											}
									resultRows +=' href="' + val.url + '" target="_blank">' + val.title + '</a></h3>' +
										'<span>' + val.url.replace(/&/g, '&amp;') + '</span>' +
										'<p>' + val.content_description + '</p>' ;
							if(val.thumbnail != null && val.thumbnail != ""){
									resultRows +=	'</div>';
							}							
						
					});
							
					if(resultRows != ""){
						resultRows = '<div class="small-post" data-wow-duration="0.5s">' + 
							'<div class="title">' + "~recommended-search-results~" + '</div>' + '<div class="text-block-recommended">'+ resultRows + '</div></div>';
						
					}
				}
                $.each(resp.SearchResult, function (i, val) {
						
						resultRows +=
							'<div class="small-post" data-wow-duration="0.5s">' ;

							if(val.gated && val.gated == "Yes"){
                               resultRows +='<div class="title">' + val.contentType+' <img src="/enterprise/en-us/img/nav/icon-locked-white.png" style="border: 0; width: auto; float: none"></div>';
                            }else if(val.contentType){
                               resultRows +='<div class="title">' + val.contentType + '</div>';
                            }

							resultRows +='<div class="text-block">';
							resultRows +='<h3><a ';
							
						if(typeof(val.dataid) != "undefined"){ 
							resultRows +=' data-id ="' + val.dataid + '"';
						}
						resultRows +=' href="' + val.url + '" target="_blank">' + val.title + '</a></h3>' +
							'<span>' + val.url.replace(/&/g, '&amp;') + '</span>' +
							'<p>' + val.content_description + '</p>' +
							'</div>' +
							'</div>';
					
                });
            	displayShowTop='<span onclick="scrollUp()" style="float:right;display:block;cursor: pointer" class="backButtonLink removeMe"><i class="up"></i> Back to top</span>';
            	resultRows+=displayShowTop;
            	$(".pagination").show();

            	} else if (resp.DidYouMean != null && resp.DidYouMean != "") {

                    $("#mClearFilter").hide();
                    $(".pagination").hide();
                	resultRows +=
                    '<div id="didYouMean"><a href="#" class="reset-btn" style="color: black;text-decoration: none;cursor: none;">' + $('#idolSearchData').attr('data-suggestion-text') + '</a> <a href="#" class="reset-btn" style="cursor: pointer;" onclick="return idolSearchBar.didYoumean(\'' + resp.DidYouMean + '\', \'' + db + '\')">' + resp.DidYouMean + '</a> </div>';
                    $("#Search").height(500);
            	} else {
            		if(db=="www")
                	{
                		$("#mClearFilter").show();
                	}
                	else{
            			$("#mClearFilter").hide();
            		}
            		$(".pagination").hide();
                	resultRows += $('#idolSearchData').attr('data-noresult-text');
            }
            $('#mresults').html(resultRows);

    	}
		
			if( typeof(_satellite.track) === typeof(Function)){
            	_satellite.track('search');
            }

    }

    function displayFilters(resp, db,keepfacets) {

        $('#dvSelection').empty();
        if(keepfacets && db != null)
        {
            allfacetsdata=resp.Filters;
        }
        var mcafeeFilter = allfacetsdata;
        if(resp != null && resp.Filters != null && resp.Filters.length > 0){
                            if(mcafeeFilter==null)
                                      {
                                          mcafeeFilter=resp.Filters;
                                      }
                                      processFilters(mcafeeFilter,db,keepfacets);
      }
      else if(db != null && mcafeeFilter!=null)
      {  processFilters(mcafeeFilter,db,keepfacets);}
    }
    function processFilters(resp,db,keepfacets)
    {
            var filterRows = '';
            var clearFilterLink = '';
                $.each( resp, function( i, val ) {
    				var facets = val.facets;
    				var realName = val.filterRealName;
    				var filterExist = false;
    				if(facets != null && facets.length > 0){
    					var selectedFilter = $('#mfilters').attr('data-selected-filter');
    					selectedFilter = selectedFilter.split(';');

    					$.each(facets, function( i, val ) {
    						filterExist = false;
    						$.each(selectedFilter, function( i2, val2 ) {
    							if(val2 == (val.facetTagName + "@" + realName)){
    								filterExist = true;
    								return false;
    							}
    						});
    						if(filterExist)
    							return false;
    					});
    				}
    				if (val.filterReadableName !== '') {
    					if(filterExist){
    						filterRows +=
    							'<div class="panel accordion-active" id="' + val.filterReadableName + '">' +

    							'<div class="panel-heading"><a class="opener" href="#">' + val.filterReadableName + '</a></div>' +
    							'<div class="panel-collapse" id="' + val.filterRealName + '" style="max-height: 150px; overflow: auto;">' + displayFacets(val.facets, val.filterRealName, db,val.filterReadableName) + '</div>' +

    							'</div>';
    					} else {
    						filterRows +=
    							'<div class="panel" id="' + val.filterReadableName + '">' +

    							'<div class="panel-heading"><a class="opener" href="#">' + val.filterReadableName + '</a></div>' +
    							'<div class="panel-collapse" id="' + val.filterRealName + '" style="max-height: 150px; overflow: auto;">' + displayFacets(val.facets, val.filterRealName, db,val.filterReadableName) + '</div>' +

    							'</div>';
    					}
    				}
                });

                $('#mfilters').html(filterRows);

                clearFilterLink +=
                    '<a href="#" class="reset-btn" onclick="idolSearchBar.clearFilters(\'' + db + '\')" style="display: block;">'+ $('#idolSearchData').attr('data-clearfilter') +'</a>';
                $('#mClearFilter').html(clearFilterLink);

                $(".panel-group .opener").off('click').on('click', function (e) {
                    e.preventDefault();
                    var accordionContainer = jQuery('.panel-group'),
                        activeClass = 'accordion-active',
                        animSpeed = 300,
                        accordion = $(this).parents("div.panel"),
                        curSlide = $(accordion).find('.panel-collapse');
                    var actParent = accordionContainer.find('.accordion-active'),
                        parent = jQuery(this).closest(accordion);

                    if (parent.hasClass(activeClass)) {
                        parent.removeClass(activeClass);
                        curSlide.slideUp(animSpeed);
                    } else {
                        parent.addClass(activeClass);
                        curSlide.slideDown(animSpeed);
                    }
                });

                $("div.panel:visible .panel-collapse").each(function () {
                    $(this).slideUp(0);
                    isFilterSelected = $('#mfilters').attr('data-selected-filter');
                    if (isFilterSelected != "") {
                        jQuery.each(isFilterSelected.split(','), function (index, item) {
                            // do something with `item` (or `this` is also `item` if you like)
                            var getitems = item.split(':');
                            if (getitems[0] != "") {
                                var parentDiv = $('#' + getitems[1]).parent();
                                parentDiv.addClass("accordion-active");
                                //$('#' + getitems[0]).addClass("accordion-active");
                                $('#' + getitems[1]).css("display", "block");
                            }
                        });
    					$(this).slideDown(0);
    					$(this).parent().addClass("accordion-active");
                    }
    if(db=="www")
    {
       /*var $list = $(this);
                    $list.find('div:gt(9)').hide();
                    if ($list.find('div').length > 10) {
                        $list.append('<a class="more_less" style="cursor: pointer;">' + showMore + '</a>')
                    }*/
    }
                else{
                    var $list = $(this);
                    $list.find('a:gt(9)').hide();
                    if ($list.find('a').length > 10) {
                        $list.append('<a class="more_less" style="cursor: pointer;">' + showMore + '</a>')
                    }

                     }

                });

                $('.more_less').click(function () {
                    var $btn = $(this);
                    $btn.parent().find('a:gt(9):not(.more_less)').slideToggle();
                    $btn.parent().find('div:gt(9):not(.more_less)').slideToggle();
                    $btn.text($btn.text() == showMore ? showLess : showMore);
                });

    }

    function displayFacets(facets, filter, db, filtername) {
        var facetRows = '';
		var selectionRow = '<strong>'+filtername + ': </strong>';
        if(facets != null && facets.length > 0){
            var selectedFilter = $('#mfilters').attr('data-selected-filter');
            selectedFilter = selectedFilter.split(';');

            $.each(facets, function( i, val ) {
                var filterExist = false;
                $.each(selectedFilter, function( i2, val2 ) {
                    if(val2 == (val.facetTagName + "@" + filter)){
                        filterExist = true;
                    }
                });
                if(db=="www")
                {
	                if (val.facetReadableName !== '') {
	                					if(filterExist) {
	                						if(allFacetsStrFromURL != '' && allFacetsStrFromURL.indexOf(val.facetTagName) > -1){
	                							facetRows += '<div class="checkbox"><input onclick="return idolSearchBar.clearSelectedFilter(\'' + val.facetTagName + '\', \'' + filter +'\',\'' + db + '\');" type="checkbox" checked disabled id="' +
	                							val.facetTagName + '"><label for="' + val.facetTagName + '" style="cursor: default;">' + val.facetReadableName + '</label></div>';
	                						} else {
	                							facetRows += '<div class="checkbox"><input onclick="return idolSearchBar.clearSelectedFilter(\'' + val.facetTagName + '\', \'' + filter +'\',\'' + db + '\');" type="checkbox" checked id="' +
	                							val.facetTagName + '"><label for="' + val.facetTagName + '">' + val.facetReadableName + '</label></div>';
	                							selectionRow += '<span class='+val.facetTagName+'>'+val.facetReadableName+'<img src="/etc/designs/enterprise/clientLibs/images/x.png" alt="Clear Filter" class="clearFilter" style="cursor: pointer;margin-right:10px;margin-left:1px" onclick="return idolSearchBar.clearSelectedFilters(\'' + val.facetTagName + '\', \'' + filter +'\',\'' + db + '\');"></span>';
	                						}
	                						//return false;
	                					} else {
	                						facetRows += '<div class="checkbox"><input onclick="idolSearchBar.getFacetsFilterResults(\'' + val.facetTagName + '\', \'' + filter +'\',\'' + db + '\')" type="checkbox" id="' +
	                						val.facetTagName + '"><label for="' + val.facetTagName + '">' + val.facetReadableName + '</label></div>';
	                					}
	                				}
	                }
                else{
				if (val.facetRealName !== '') {
					if(filterExist){
						facetRows +=
							'<div style="display: flex;"> <strong>' + val.facetRealName + ' (' + val.noOfRecords + ')</strong> <img src="/etc/designs/enterprise/clientLibs/images/x.png" alt="Clear Filter" class="clearFilter" style="cursor: pointer;height: 15px;width: 15px;margin-left:15px;" onclick="return idolSearchBar.clearSelectedFilter(\'' + val.facetTagName + '\', \'' + filter +'\',\'' + db + '\');"></div>';
					} else {
						facetRows +=
							'<a href="#" onclick="return idolSearchBar.getFacetsFilterResults(\'' + val.facetTagName + '\', \'' + filter +'\',\'' + db + '\')">' + val.facetRealName + ' (' + val.noOfRecords + ')</a>';
					}
				}
				}

            });
            if(db=="www")
            {
             if(selectionRow.indexOf('<span')>=0){
                var divtext=$('#dvSelection').text();
                if(divtext.indexOf('~selection~')>=0){
                $('#dvSelection').append(selectionRow);
                }else{
                    $('#dvSelection').append('<strong>~selection~</strong><br/>'+selectionRow);
                }

                	}
            }
        }
        return facetRows;
    }

    function openModal() {
        var vModal = document.getElementsByClassName('Tabmodal');
        for (i = 0; i < vModal.length; i++) {
            vModal[i].style.display = 'block';
        }

        var vFade = document.getElementsByClassName('Tabfade');
        for (i = 0; i < vFade.length; i++) {
            vFade[i].style.display = 'block';
        }
    }

    function closeModal() {
        var vModal = document.getElementsByClassName('Tabmodal');
        for (i = 0; i < vModal.length; i++) {
            vModal[i].style.display = 'none';
        }

        var vFade = document.getElementsByClassName('Tabfade');
        for (i = 0; i < vFade.length; i++) {
            vFade[i].style.display = 'none';
        }
    }

    function updateQueryStringParameter(uri, key, value) {
        var re = new RegExp("([?&])" + key + "=.*?(&|$)", "i");
        var separator = uri.indexOf('?') !== -1 ? "&" : "?";
        if (uri.match(re)) {
            return uri.replace(re, '$1' + key + "=" + value + '$2');
        }
        else {
            return uri + separator + key + "=" + value;
        }
    }

    function callSearch(db) {
        var searchValue = encodeURIComponent($('#iSearch').val());
        var qValue = getParameterByName("q", window.location.href);
        if (qValue != "" && qValue != null) {
            searchValue = encodeURIComponent(qValue);
            $('#iSearch').val(qValue);
        }
        var facetFilter =  $('#mfilters').attr('data-selected-filter');

        getSearchResults(1, db, searchValue, facetFilter,true);
    }

    function getParameterByName(name, url) {
        if (!url) url = window.location.href;
        name = name.replace(/[\[\]]/g, "\\$&");
        var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
            results = regex.exec(url);
        if (!results) return null;
        if (!results[2]) return '';
        return decodeURIComponent(results[2].replace(/\+/g, " "));
    }


    function noDataBaseUiChange(db) {
        if (db == 'all') {
            $('#facetAndFilter').attr('class', '');
            $('#searchResultAndPagination').attr('class', 'col-md-12 col-sm-12');
            $('#facetAndFilter').hide();
        } else {
            $('#facetAndFilter').attr('class', 'col-md-3 col-sm-12');
            $('#facetAndFilter').show();
            $('#searchResultAndPagination').attr('class', 'col-md-9 col-sm-12');
        }
    }

    var clearFilters = function(db) {
        var searchValue = encodeURIComponent($('#iSearch').val());
        $('#mfilters').attr('data-selected-filter', '');
        allfacetsdata=null;
        getSearchResults(1, db, searchValue, '',true);
        return false;
    }

     var clearTextAndFilters = function(db) {
             $('#iSearch').val("");
            //$('#mfilters').attr('data-selected-filter', '');
            //allfacetsdata=null;
            getSearchResults(1, db, "", '',true);
            return false;
        }

    var clearSelectedFilter = function(facet, filter, db) {
        var getFilterval = $('#mfilters').attr('data-selected-filter');
        var clearHiddenFilter = facet + '@' + filter + ";";
        //if(db=="www")
        //{
        //var element = document.getElementByTagName(elementId);
          //  element.parentNode.removeChild(element);
        //}
       // $('#dvSelection').('#'+facet).remove();
        getFilterval = getFilterval.replace(clearHiddenFilter, "");
        $('#mfilters').attr('data-selected-filter', getFilterval);

        var searchValue = encodeURIComponent($('#iSearch').val());
        getSearchResults(1, db, searchValue, $('#mfilters').attr('data-selected-filter'),false);
        return false;
    };
	
	var clearSelectedFilters=function(facet, filter, db) {
	return clearSelectedFilter(facet, filter, db);
	};
	
	var onSubmitClick = function() {
        var field = 'q';
        var inputParam = $("#iSearch").val(); //encodeURIComponent($("#iSearch").val());
		var getFilterval = $('#mfilters').attr('data-selected-filter');
        var newSrc = inputParam;
        var strlUrl = window.location.href;
        //var dbname=$("ul.nav-tabs li.active a").attr("data-filter");
        var dbname="www";
        if(dbname ==undefined || dbname == null){
            var endsWith = strlUrl.slice(strlUrl.length - 1, strlUrl.length)
            if (endsWith == "=") { strlUrl = strlUrl.concat("#"); } //encodedParam.slice(0, -1); }

            if ((strlUrl.indexOf('?' + field + '=') != -1) || (strlUrl.indexOf('&' + field + '=') != -1)) {
                var newURL = updateQueryStringParameter(strlUrl, field, newSrc);
            }
            else if (strlUrl.indexOf('?') != -1) {
                var newURL = strlUrl + "&q=" + newSrc;
            }
            else { var newURL = strlUrl + "?q=" + newSrc; }
            window.location = newURL;
        }else{
        	if(dbname=="www")
                idolSearchBar.getSearchResults(1, dbname, encodeURIComponent($('#iSearch').val()),getFilterval,false);
                else
                idolSearchBar.getSearchResults(1, dbname, encodeURIComponent($('#iSearch').val()),'',true);
        }

    };

    var getFacetsFilterResults = function(facet, filter, db) {

        var searchValue = encodeURIComponent($('#iSearch').val());
        var facetFiler = "";
        //if(db=="www"){

        //$('#dvSelection').append('<span class='+facet+'>'+filterRealName+'<img src="/etc/designs/enterprise/clientLibs/images/x.png" alt="Clear Filter" class="clearFilter" style="cursor: pointer;margin-right:10px;margin-left:1px" onclick="return idolSearchBar.clearSelectedFilters(\'' + facet + '\', \'' + filter +'\',\'' + db + '\');"></span>');

        //}


        var getFilterval = $('#mfilters').attr('data-selected-filter');
        if (getFilterval.indexOf(facet + "@" + filter + ";") == -1) {
            getFilterval = getFilterval + (facet + "@" + filter) + ";";
        }

        $('#mfilters').attr('data-selected-filter', getFilterval);
        getSearchResults(1, db, searchValue, getFilterval,false);

        return false;

    };

    var getSearchResults = function(num, db, searchValue, facetFilter,keeprecords) {
        $('html').animate({ scrollTop: $('#Search').offset().top }, 'slow');//IE, FF
        $('body').animate({ scrollTop: $('#Search').offset().top }, 'slow');
		
		digitalData.page.pageInfo.onsiteSearchTerm=searchValue;
        var pageSize = parseInt($("#mpagefilter").val());
        $('#mpagefilter').attr('data-db', db);
        var start = (num == 1) ? 0 : (((num - 1) * pageSize) );
		var locale = "";
		if(window.location.href.indexOf("content/mainsite") > -1 || window.location.href.indexOf("content/sample_enterprise") > -1) {
			locale = window.location.pathname.split('/')[3];
		} else if(window.location.href.indexOf("mainsite") > -1 || window.location.href.indexOf("sample_enterprise") > -1) {
			locale = window.location.pathname.split('/')[2];
		} else {
			locale = 'en-us';
		}
		locale = (locale.indexOf('.html') > -1 ? locale.replace('.html', '') : locale);
        var searchData = {
            'q': searchValue,
            'min': parseInt(start),
            'max': (parseInt(start) + parseInt(pageSize) - 1 ),
            'db': db,
            'getDBCount': 'true',
            'getfilters': 'true',
            'requestType': 'search',
            'locale': locale,
            'facets': facetFilter
        };

        openModal();

        $.ajax({
            dataType: "json",
            url: idolSearchServlet,
            data: searchData,
            crossDomain: true,
            contentType: "application/json; charset=utf-8",
            success: function(resp){
                //console.log(resp);
                //displayDataBasesTab(db);
                displaySearchResult(resp, db);
                //displayFilters(resp, db,keeprecords);
                noDataBaseUiChange("all");
                displayPagination(db, resp, num, pageSize);
				
                
                /*
                 * Put the code to replace global variable in resource library
                 */
 				 var mode = getCookie('cq-authoring-mode');
	             if((undefined == mode) || ('undefined' == mode) || (null == mode) || ('' == mode)) {
	                 // replace global variables on publish and preview environment only
	                 var crrnt_href = window.location.href;
	                 var partial_href = crrnt_href.split("enterprise");
	                 var locale_href = partial_href[1];
	                 var global_var_path = partial_href[0];
	                 
	                 if((undefined != locale_href) && ('undefined' != locale_href)) {          
	                     var crrnt_locale = locale_href.split("/")[1];
	                     if((undefined != crrnt_locale) && ('undefined' != crrnt_locale)) { 
	                         // remove .html from region specific URLs
	                         crrnt_locale = crrnt_locale.split(".")[0];
	                     }
	                     global_var_path = global_var_path + "enterprise/" + crrnt_locale + "/_jcr_content.globalconfig.json?q=1";
	         
	                     $.ajax({
	                         type: "GET",
	                         url: global_var_path,
	                         success: function(result){
	                             var dictionary = result.globalConfig[0];
	                             function replaceGlobalVar () {
	                                 regexp = RegExp ('~\\b(' + Object.keys (dictionary).join ('|') + ')\\b~', 'ig');
	                                 $.each(dictionary, function(key, val) { 
	                                     key = '~' + key + '~';
	                                     $("body *").replaceText (key, val);
	                                 });
	                             }
	                             replaceGlobalVar();
	                         },
	                         error: function (result){
	                             // Global Variable JSON not accessible
	                         }
	                     });
	                 }
	             }
            },
            error: function() {
            }
        }).always(function() {
            closeModal();
        });
    };

    var displayPagination = function(db, resp, num, rows){
        var windowWidth = $(window).width();
        if(resp.TotalNumberOfResults <= rows) {
            $('#page-selection').hide();
            return;
        } else {
            $('#page-selection').show();
        }
        $('#page-selection').bootpag({
            total: Math.ceil(resp.TotalNumberOfResults / rows),
            page: num,
            maxVisible: 3,
            leaps: false,
            next: $('#idolSearchData').attr('data-next-pagination') + ' ›',
            prev: '‹ ' + $('#idolSearchData').attr('data-previous-pagination'),
            firstLastUse: false
        });

        $('.bootpag').append('<li id="magic-line" class="bg-primary"></li>');
        $('#page-selection').find("li a").each(function () {
            var $magicLine = $($('#page-selection').find("li#magic-line"));
            if ($magicLine) {
                $magicLine
                    .width(jQuery('#page-selection' + " .bootpag .active").width())
                   .css("left", jQuery('#page-selection' + " .bootpag .active ").position().left)
                    .data("origLeft", $magicLine.position().left)
                    .data("origWidth", $magicLine.width());
            }
            return;
        });

        function setActive() {
            var $magicLine = $($('#page-selection').find("li#magic-line"));
            $magicLine
                .width(jQuery(".bootpag .active").width())
                .css("left", jQuery(".bootpag .active ").position().left)
                .data("origLeft", $magicLine.position().left)
                .data("origWidth", $magicLine.width());
        }
        setActive();
        jQuery(window).on('resize', setActive);
        jQuery(".bootpag li").hover(function() {
            $el = jQuery(this);
            var $magicLine = $el.parent().find("#magic-line");
            leftPos = $el.position().left;
            newWidth = $el.width();
            $magicLine.stop().animate({
                left: leftPos,
                width: newWidth
            });
        }, function() {
            var $magicLine = jQuery(this).parent().find("#magic-line");
            $magicLine.stop().animate({
                left: $magicLine.data("origLeft"),
                width: $magicLine.data("origWidth")
            });
        });
    };


    var createPerPageDropDown = function(){ 
        var mpagefilterContent = "";
        $.each($('#idolSearchData').attr('data-pagination').split(','), function(key, val) {
        	mpagefilterContent += '<option value="' + val +'">' + val + '</option>';
        });
		$('#mpagefilter').html(mpagefilterContent);
    };


    var prepareDataBaseArray = function(){ 
        var mpagefilterContent = "";
        $.each($('#idolSearchData').attr('data-site-details').split(','), function(key, val) {
            idolSearchBar.dataBases.push({ 'key' : val.split(':')[1], 'name': val.split(':')[0]});
        });
    };

    var createPerPage = function(){ 
		var dropDownHtml = '<span class="fake-select"><select id="mpagefilter" data-db=""></select></span>';
		$('#show-select').html($('#idolSearchData').attr('data-pagination-text').replace('{per-page-count}', dropDownHtml));
    };	


    return {
        getSearchResults: getSearchResults,
        callSearch: callSearch,
        getFacetsFilterResults: getFacetsFilterResults,
        onSubmitClick: onSubmitClick,
        clearFilters: clearFilters,
        clearSelectedFilter: clearSelectedFilter,
        clearSelectedFilters: clearSelectedFilters,
        clearTextAndFilters:clearTextAndFilters,
        didYoumean: didYoumean,
        displayPagination: displayPagination,
        dataBases: dataBases,
        createPerPageDropDown : createPerPageDropDown,
        prepareDataBaseArray: prepareDataBaseArray,
		createPerPage: createPerPage,		
		configData: configData
    };
})();

$(document).ready(function(){
	
		
		
		
        var prev = $('#idolSearchData').attr('data-previous-pagination');
		var next = $('#idolSearchData').attr('data-next-pagination');
		var clear = $('#idolSearchData').attr('data-clearfilter');
		var paginationText = $('#idolSearchData').attr('data-pagination-text');
		var suggestion = $('#idolSearchData').attr('data-suggestion-text');
		var searchResultPath = $('#header-search-button').attr('data-result-path');
        var noResult = $('#idolSearchData').attr('data-noresult-text');
		
		idolSearchBar.configData = { 
			'prev' : prev,
			'next' : next
		};
    if($('#iSearch').length > 0){

		idolSearchBar.createPerPage();
		idolSearchBar.createPerPageDropDown();
        idolSearchBar.prepareDataBaseArray();

        $('#mfilters').attr('data-selected-filter', '');
        $("#mpagefilter").change(function () {
            var searchValue = encodeURIComponent($('#iSearch').val());

            idolSearchBar.getSearchResults(1, $('#mpagefilter').attr('data-db'), searchValue, $('#mfilters').attr('data-selected-filter'),false);
            //var ht=$("#searchResultHeight").height(2050*($('#mpagefilter').val()/10));
            //$("#searchResultAndPagination").height()+100;
           // $("#searchResultHeight").height(ht);
        });

        $('#page-selection').bootpag({
        });

        $('#page-selection').on("page", function(event, num){
            idolSearchBar.getSearchResults(num, $('#mpagefilter').attr('data-db'), encodeURIComponent($('#iSearch').val()), $('#mfilters').attr('data-selected-filter'),false);
        });


        idolSearchBar.callSearch(idolSearchBar.dataBases[0].key);
		
    }
 
	//enable autosuggest
	//$('#iSearch,#libSearch').keyup(function() {
	$('#libSearch').keyup(function() {
        var value = $(this).val();
		ajaxAutoSuggest(value);
	});

});


function scrollUp()
{
window.scrollTo(200, 0);
}

function ajaxAutoSuggest(value){
	if(value.length < 2){
         $('.ui-autocomplete').hide();
         return;
    }
	//var locale = window.location.href.replace(/.*mainsite\//,"").replace(/\/.*/,"");

	var locale_new = window.location.pathname.split("/");
    var locale = locale_new[1];

	 var queryData = {
			'q': value,
            'requestType': 'autosuggest',
            'locale': locale
        };
	 
 					$.ajax({
	                         type: "GET",
	                         url: "/corpcomsvc/searchautosuggest",
							 data:queryData,
							 cache:false,
	                         success: function(result){
	                             if(result != null && result.ErrorCode == null){	

									result = result.replace(/'/g, '"');
                                     result = JSON.parse(result);

                                     if($("#libSearch").length > 0){ addAutoSuggest($("#libSearch"),result,"libSearch");}
                                     //if($("#iSearch").length > 0){ addAutoSuggest($("#iSearch"),result,"iSearch");}
                                     //if($("#msearch").length > 0){ addAutoSuggest($("#msearch"),result,"msearch");}
                                     if($("#q").length > 0){ addAutoSuggest($("#q"),result, "q");}

								 }else{

									 console.log("Error in auto suggest");
								 }
	                         },
	                         error: function (result){
	                             // AutoSuggest JSON not accessible

								 console.log("AutoSuggest JSON not accessible");
	                         }
	                     });	
	

	
}

function sortAutoSuggestObject(obj, term) {
    var arr = [];
    //var prop;
	term = decodeURI(term);
    for (var propJson in obj) {    	
    var re = new RegExp('^'+ term, "gi");
    var decodedProp = decodeURI(propJson.trim());
        //ole.log("RE:: " + re);
        //console.log("decodedProp::"+ decodedProp);
        if (re.test(decodedProp)) {     
            arr.push({
                'key': decodedProp,
                'value': obj[propJson]
            });
        }
    }



        arr.sort(function(a, b) {
    
             if( (parseInt(b.value, 10) - parseInt(a.value, 10))!==0){ 
                return parseInt(b.value, 10) - parseInt(a.value, 10);
             }else{            
                  if (a.key.toUpperCase() > b.key.toUpperCase()) return 1 
                  if (a.key.toUpperCase() < b.key.toUpperCase()) return -1 
                  return 0; 
             }
        });


    var uniqueEle = new Map();
	for(index in arr){ 
   		 uniqueEle.set(arr[index].key.toLowerCase(),arr[index].key);

	}

	arr = Array.from(uniqueEle.values());

    if(arr.length>6){
		 arr.length=6;
    }
    arr.sort(function(x,y){ 
		  var a = String(x).toUpperCase(); 
		  var b = String(y).toUpperCase(); 
		  if (a > b) return 1 
		  if (a < b) return -1 
		  return 0; 
		}); 


  //  console.log("arr.length:"+arr.length);
    return arr; // returns array
}

function addAutoSuggest(elem, result,id){

			$("#"+id).autocomplete({

			 minLength: 3,
			 appendTo: $("#"+id).parent(),
                source: function(request, response) {
                         var term =request.term.replace(/\\/g,"\\\\");
							 term ="(" + term + ")"; 
						 response(sortAutoSuggestObject(result,term));
                     }
			}).data("autocomplete")._renderItem = function (ul, item) {
                 var term =  this.element.val();
					term = term.replace(/\\/g,"\\\\");
                	term = decodeURI(term);
					term ="(" + term + ")"; 
					var re = new RegExp('^'+ term, "gi");
					var t = item.label.trim().replace(re, "<b>$1</b>");
					return $("<li class='ui-menu-item'></li>").data("item.autocomplete", item).append("<div class='ui-menu-item-wrapper'"+ 'onclick="callSearch('+"'"+item.label.trim()+"'"+','+"'"+id+"'"+'); hideSuggestList(this); return false;"'+">" + t + "</div>").appendTo(ul);

             };

      if(id==="q"){

			$("#"+id).autocomplete( "option", "appendTo", ".search-form" );
      }

}

function callSearch(data, id){

    $("#"+id).val(data);
        if(id==="q"){
            idolSearchBar.onSubmitHeaderClick();
        }else if(id==="iSearch"){
            idolSearchBar.onSubmitClick(); 
        }else if(id==="libSearch"){
            resourceSearchBar.onLibSearchSubmitClick();
        }
        /*else if(id==="msearch"){
         idolSearchBar.onSubmitClick();
        }*/

        }

function hideSuggestList(elem){

	var _suggestUlElem = elem.parentElement.parentElement;

    return _suggestUlElem.style.display = "none";

}

function getCookie(name) {
	var dc = document.cookie;
	var prefix = name + "=";
	var begin = dc.indexOf("; " + prefix);
	if (begin == -1) {
		begin = dc.indexOf(prefix);
		if (begin != 0) {
			return null;
		}
	}
	else {
		begin += 2;
	}
	var end = document.cookie.indexOf(";", begin);
	if (end == -1) {
		end = dc.length;
	}
	return unescape(dc.substring(begin + prefix.length, end));
}
var dataBase = '',
 db = '',
 resourceLibPageURL = '',
 allFacetsStrFromURL = '',
 allfacetsdata='';
var resourceSearchBar = (function(){
    var resourceSearchServlet = '/corpcomsvc/search';
	var showMore = 'Show More';
    var showLess = 'Show Less';
    var getLibSearchResult = function(num, db, searchValue, pageFilter,keeprecords) {
        $('html').animate({ scrollTop: $('#Case_Study').offset().top }, 'slow');//IE, FF
        $('body').animate({ scrollTop: $('#Case_Study').offset().top }, 'slow');
		var pageSize = $("#mpagefilter").val();
		if (undefined === pageSize)
			pageSize = '10';
		pageSize = parseInt(pageSize);
		//var start = (num == 1) ? 1 : (((num - 1) * pageSize) + 1);
		var start = (num == 1) ? 0 : (((num - 1) * pageSize) );
		var maxVal = parseInt(start) + parseInt(pageSize) - 1 ;
		var totalCount = parseInt($('#totalResultCount').val());
		if (isNaN(totalCount))
			$('#totalResultCount').val("0");
		if (maxVal > $('#totalResultCount').val() && $('#totalResultCount').val() > 10)
			maxVal = $('#totalResultCount').val();
		var locale = "";
		if(window.location.href.indexOf("content/mainsite") > -1 || window.location.href.indexOf("content/sample_enterprise") > -1) {
			locale = window.location.pathname.split('/')[3];
		} else if(window.location.href.indexOf("mainsite") > -1 || window.location.href.indexOf("sample_enterprise") > -1) {
			locale = window.location.pathname.split('/')[2];
		} else {
			locale = 'en-us';
		}
		locale = (locale.indexOf('.html') > -1 ? locale.replace('.html', '') : locale);
        if ($('#resourceLocale').attr('data-resource-locale') != undefined ) {
		var resLibLocales = locale + ',' + $('#resourceLocale').attr('data-resource-locale');
		console.log("new loacle is" + locale);
		}

        var searchData = {
            'q': searchValue,
            'min': parseInt(start),
            'max': maxVal,
            'db': db,
            'getDBCount': 'true',
            'getfilters': 'true',
            'requestType': 'resourceLibrary',
            'locale': locale,
            'facets': pageFilter,
			'resLibLocales': resLibLocales
        };

        $.ajax({
            dataType: "json",
            url: resourceSearchServlet,
            data: searchData,
            crossDomain: true,
            contentType: "application/json; charset=utf-8",
            success: function(resp){
                displayLibSearchResult(resp);
                displayLibFilters(resp, db,keeprecords);
				displayLibPagination(db, resp, num, pageSize);

				/*
                * Put the code to replace global variable in resource library
                */
				var mode = getCookie('cq-authoring-mode');
                if((undefined == mode) || ('undefined' == mode) || (null == mode) || ('' == mode)) {
                    // replace global variables on publish and preview environment only
                    var crrnt_href = window.location.href;
                    var partial_href = crrnt_href.split("mainsite");
                    var locale_href = partial_href[1];
                    var global_var_path = partial_href[0];

                    if((undefined != locale_href) && ('undefined' != locale_href)) {
                        var crrnt_locale = locale_href.split("/")[1];
                        if((undefined != crrnt_locale) && ('undefined' != crrnt_locale)) {
                            // remove .html from region specific URLs
                            crrnt_locale = crrnt_locale.split(".")[0];
                        }
                        global_var_path = global_var_path + "mainsite/" + crrnt_locale + "/_jcr_content.globalconfig.json?q=1";

                        $.ajax({
                            type: "GET",
                            url: global_var_path,
                            success: function(result){
                                var dictionary = result.globalConfig[0];
                                function replaceGlobalVar () {
                                    regexp = RegExp ('~\\b(' + Object.keys (dictionary).join ('|') + ')\\b~', 'ig');
                                    $.each(dictionary, function(key, val) {
                                        key = '~' + key + '~';
                                        $("body *").replaceText (key, val);
                                    });
                                }
                                replaceGlobalVar();
                            },
                            error: function (result){
                                // Global Variable JSON not accessible
                            }
                        });
                    }
                }
            },
            error: function() {
            }
        }).always(function() {

        });
    };
	var createPerPage = function(){
		var dropDownHtml = '<span class="fake-select"><select id="mpagefilter" data-db=""></select></span>';
		$('#show-select').html($('#resourceAttributes').attr('data-pagination-text').replace('{per-page-count}', dropDownHtml));
    };
	var createPageNoDropdown = function() {
		pageValArr = [];
		var pageValues = $('#resourceAttributes').attr('data-pagination');
		if (pageValues === undefined || pageValues.length < 1) {
			pageValues = "10,20,50";
		}
		if (pageValues.length > 0) {
			pageValArr = pageValues.split(',');
			$.each(pageValArr, function(i, val) {
				$('#mpagefilter').append("<option val='" + val + "'>" + val + "</option>");
			});
		}
	}
    function displayLibSearchResult(resp) {
        var resultRows = '';
        var desc = '';
        var displayShowTop='';
        if(resp != null && resp.SearchResult != null){
			if (resp.SearchResult.length > 0) {
			$(".reset-btn").show();
				$.each( resp.SearchResult, function( i, val ) {
                    var actualUrl = val.url;
                    if(actualUrl.indexOf('gated=true')>-1){
				//if(val.gated && val.gated == "Yes"){
                    resultRows +=
                        '<div class="small-post" data-wow-duration="0.5s">' +
                            '<div class="title">' +val.contentType+' <img src="/enterprise/en-us/img/nav/icon-locked-white.png" style="border: 0; width: auto; float: none"></div>' +
                            '<div class="text-block">';
                }else{
                    resultRows +=
                        '<div class="small-post" data-wow-duration="0.5s">' ;
                           // '<div class="title">' + val.contentType + '</div>' +
                            //'<div class="text-block">';
                            if(val.contentType.length>0){
                                 resultRows += '<div class="title">' + val.contentType + '</div>' +
                                                                                            '<div class="text-block">';
                            }
                }
                if(( undefined !== val.description)){
                    desc = val.description;
                }else if (( undefined !== val.content_description)){
                desc = val.content_description;
                } else{
                desc = 'No Description';
                }


                    resultRows +='<h3><a ';
					 if(typeof(val.dataid) != "undefined"){
						resultRows +=' data-id ="' + val.dataid + '"';
                     }

                     var displayUrl = "";
                        if(actualUrl.indexOf('gated=true')>-1){
                        displayUrl = actualUrl.slice(0, actualUrl.indexOf('&'));
                        }else{
                      displayUrl = actualUrl.slice(0, actualUrl.indexOf('?'));
                      }
                      if(getUrlExtension(displayUrl) == "pdf"){
                                                linkClass = "link-download";
                                          }else if(getUrlExtension(displayUrl) == "html"){
                                          linkClass = "link-arrow";
                                          }else{
                                          linkClass = "link-external";
                                          }

                                      resultRows +=
                                          ' href="' + displayUrl + '" target="_blank" class=' + linkClass +' >' + val.title + '</a></h3>' +
                   								'<span>' + displayUrl + '</span>' +
                                                   '<p>' + desc + '</p>' +
                   							'</div>' +
                   						'</div>';

				});
				//displayShowTop='<span onclick="scrolllibUp()" style="float:right;display:block;cursor: pointer" class="backButtonLink removeMe"><i class="up"></i> ~go-to-top~</span>';
                //resultRows+=displayShowTop;
			} else {
			if(!$('#mfilters').attr('data-selected-filter')){
			            $(".reset-btn").hide();
			        }
                resultRows +=
                    '<div id="result" class="col-xs-12">' ;
				//resultRows +=	'<p style="display:inline-block"><b>' + $($('#resourceAttributes').attr('data-search-keyword')).text() +  '</b><strong>"' +
				//	$('#libSearch').val() +'"</strong></p>';
					//resultRows +=<br class="clear"><span class="p" xmlns="">' ;
					//resultRows +='<ul class="alertArea"><li class="alertIcon" style="display:inline-block">' ;
					resultRows +='<div class="alertArea">'+$('#resourceAttributes').attr('data-noresult-resource')+'</div>' ;
					//resultRows +='</li></ul><p>' ;
					//resultRows +=$('#resourceAttributes').attr('data-suggestion-resource')+' '+resp.DidYouMean +'<div>';
            }
            $('#mresults').html(resultRows);
			/*$('.row').sameHeight({
				elements: '.text-block',
				flexible: true,
				multiLine: true,
				biggestHeight:true
			});*/
			 }else{
                           if (!$('#mfilters').attr('data-selected-filter')) {
                                $(".reset-btn").hide();
                            }
                            resultRows += '<div class="alertArea">' + $('#resourceAttributes').attr('data-noresult-resource') + '</div>';

        }
        $('#mresults').html(resultRows);
        //card click logic - MDX-914
         $('.small-post .text-block').each((i,e) => $(e).click(f =>{
            let aTag=$(f.target).find('a')[0];
             if( typeof aTag === 'undefined' || aTag === null ){
                 aTag= $(f.target).parent().find('a')[0];
        }
                //window.open($(aTag).attr('href'), '_blank');
                aTag.click();
}));
    }



    function getUrlExtension( url ) {
        return url.split(/[#?]/)[0].split('.').pop().trim();
    }


    function displayLibFilters(resp, db, keepfacets) {
        $('#dvLibSelection').empty();
        if(keepfacets)
        {
            allfacetsdata=resp.Filters;
        }
        var mcafeeFilter = allfacetsdata;
        if(resp != null && resp.Filters != null && resp.Filters.length > 0)
        {
                if(mcafeeFilter==null)
                {
                mcafeeFilter=resp.Filters;
                }
             processLibFilters(mcafeeFilter,db,keepfacets);
        }
        else if(mcafeeFilter!=null)
        {
              processLibFilters(mcafeeFilter,db,keepfacets);
        }
        $('.panel-group .checkbox').each((i, e) => $(e).click( e => $(e.target).find('[type=checkbox]').click()));
        closeAllAccordians();
    }
function processLibFilters(mcafeeFilter, db, keepfacets) {
                                  var filterRows = '';
                                  var clearFilterLink = '';
                                  mcafeeFilter = mcafeeFilter.sort(sortByFilterName);
                                  $.each( mcafeeFilter, function( i, val ) {
                                  				var facets = val.facets;
                                  				var realName = val.filterRealName;
                                  				var filterExist = false;
                                  				if(facets != null && facets.length > 0){
                                  					var selectedFilter = $('#mfilters').attr('data-selected-filter');
                                  					selectedFilter = selectedFilter.split(';');

                                  					$.each(facets, function( i, val ) {
                                  						filterExist = false;
                                  						$.each(selectedFilter, function( i2, val2 ) {
                                  							if(val2 == (val.facetTagName + "@" + realName)){
                                  								filterExist = true;
                                  								return false;
                                  							}
                                  						});
                                  						if(filterExist)
                                  							return false;
                                  					});
                                  				}
                                  				if (val.filterReadableName !== '') {
                                  					if(filterExist){
                                  						filterRows +=
                                  							'<div class="panel accordion-active" id="' + val.filterReadableName + '">' +
                                  							'<div class="panel-heading"><a class="opener" href="#">' + val.filterReadableName + '</a></div>' +
                                  							'<div class="panel-collapse" id="' + val.filterRealName + '" style="max-height: 150px; overflow: auto;">' +
                                  							displayLibFacets(val.facets, val.filterRealName, dataBase,val.filterReadableName) + '</div></div>';
                                  					} else if(facets != undefined && facets.length>0){
                                  						filterRows +=
                                  							'<div class="panel" id="' + val.filterReadableName + '">' +
                                  							'<div class="panel-heading"><a class="opener" href="#">' + val.filterReadableName + '</a></div>' +
                                  							'<div class="panel-collapse" id="' + val.filterRealName + '" style="max-height: 150px; overflow: auto;">' +
                                  							displayLibFacets(val.facets, val.filterRealName, dataBase,val.filterReadableName) + '</div></div>';
                                  					}
                                  				}
                                              });

                                              $('#mfilters').html(filterRows);
                                              // to hide the filter section if no filters are available
                                              if(filterRows.length == 0){
                                                  $('#facetAndFilter').hide();
                                              }else{
                                                  $('#facetAndFilter').show();
                                              }

                                  			$(".panel-group .opener").off('click').on('click', function (e) {
                                                  e.preventDefault();
                                                  var accordionContainer = jQuery('.panel-group'),
                                                      activeClass = 'accordion-active',
                                                      animSpeed = 300,
                                                      accordion = $(this).parents("div.panel"),
                                                      curSlide = $(accordion).find('.panel-collapse');
                                                  var actParent = accordionContainer.find('.accordion-active'),
                                                      parent = jQuery(this).closest(accordion);

                                                  if (parent.hasClass(activeClass)) {
                                                      parent.removeClass(activeClass);
                                                      curSlide.slideUp(animSpeed);
                                                  } else {
                                                      parent.addClass(activeClass);
                                                      curSlide.slideDown(animSpeed);
                                                  }
                                              });
                                  }
	function sortByFacetName(a, b){
		var aName = a.facetRealName.toLowerCase();
		var bName = b.facetRealName.toLowerCase();
		return ((aName < bName) ? -1 : ((aName > bName) ? 1 : 0));
	}

	function sortByFilterName(a, b){
    		var aName = a.filterRealName.toLowerCase();
    		var bName = b.filterRealName.toLowerCase();
    		return ((aName < bName) ? -1 : ((aName > bName) ? 1 : 0));
    	}


    function displayLibFacets(facets, filter, db, filtername) {
        var facetRows = '';
        var selectionRow = '<strong>'+filtername + ': </strong>';
        if(facets != null && facets.length > 0){
            var selectedFilter = $('#mfilters').attr('data-selected-filter');
            selectedFilter = selectedFilter.split(';');
			facets = facets.sort(sortByFacetName);
            $.each(facets, function( i, val ) {
                var filterExist = false;
                $.each(selectedFilter, function( i2, val2 ) {
                    if(val2 == (val.facetRealName + "@" + filter)){
                        filterExist = true;
                    }
                });
				if (val.facetReadableName !== '') {
					if(filterExist) {
						if(allFacetsStrFromURL != '' && allFacetsStrFromURL.indexOf(val.facetTagName) > -1){
							facetRows += '<div class="checkbox"><input onclick="resourceSearchBar.clearSelectedFilter(\'' + val.facetRealName + '\', \'' + filter +'\',\'' + db + '\');" type="checkbox" checked id="' +
							val.facetTagName + '"><label for="' + val.facetTagName + '" style="cursor: default;">' + val.facetReadableName + '</label></div>';
							selectionRow += '<span class='+val.facetTagName+'>'+val.facetRealName+'<img src="/etc/designs/enterprise/clientLibs/images/x.png" alt="Clear Filter" class="clearFilter" style="cursor: pointer;margin-right:10px;margin-left:1px" onclick="return resourceSearchBar.clearSelectedFilter(\'' + val.facetTagName + '\', \'' + filter +'\',\'' + db + '\');"></span>';
						} else {
							facetRows += '<div class="checkbox"><input onclick="resourceSearchBar.clearSelectedFilter(\'' + val.facetRealName + '\', \'' + filter +'\',\'' + db + '\');" type="checkbox" checked id="' +
							val.facetTagName + '"><label for="' + val.facetTagName + '">' + val.facetReadableName + '</label></div>';
							selectionRow += '<span class='+val.facetTagName+'>'+val.facetRealName+'<img src="/etc/designs/enterprise/clientLibs/images/x.png" alt="Clear Filter" class="clearFilter" style="cursor: pointer;margin-right:10px;margin-left:1px" onclick="return resourceSearchBar.clearSelectedFilter(\'' + val.facetTagName + '\', \'' + filter +'\',\'' + db + '\');"></span>';
						}
						//return false;
					} else {
						facetRows += '<div class="checkbox"><input onclick="resourceSearchBar.getLibFacetsFilterResults(\'' + val.facetRealName + '\', \'' + filter +'\',\'' + db + '\')" type="checkbox" id="' +
						val.facetTagName + '"><label for="' + val.facetTagName + '">' + val.facetReadableName + '</label></div>';
					}
				}

            });
             if(selectionRow.indexOf('<span')>=0){
                            var divtext=$('#dvLibSelection').text();
                            if(divtext.indexOf('~selection~')>=0){
                            $('#dvLibSelection').append(selectionRow);
                            }else{
                                $('#dvLibSelection').append('<strong>~selection~</strong><br/>'+selectionRow);
                            }

                            	}
        }
        return facetRows;

    }
	var getLibFacetsFilterResults = function(facet, filter, db) {

            //var searchValue = encodeURIComponent($('#libSearch').val());
            var searchValue = $('#libSearch').val();
            var facetFiler = "";

              let filterCheckboxes = $('#facetAndFilter .checkbox input[type=checkbox]');
                    let checks = filterCheckboxes.map((i, e) => e.checked).toArray()

                    if (checks.reduce((t, i) => t + i) > 0) {
                        $('#filterHeader').addClass('hidden');
                        $('#mClearFilter').removeClass('hidden');
                    } else {
                        $('#filterHeader').removeClass('hidden');
                        $('#mClearFilter').addClass('hidden');
                    }

            var getFilterval = $('#mfilters').attr('data-selected-filter');
            if (getFilterval.indexOf(facet + "@" + filter + ";") == -1) {
                getFilterval = getFilterval + (facet + "@" + filter) + ";";
            }

            $('#mfilters').attr('data-selected-filter', getFilterval);
            getLibSearchResult(1, db, searchValue, getFilterval,false);

            return false;

    };

      $('#mClearFilter a').on('click', e => {
                //var searchValue = encodeURIComponent($('#libSearch').val());
                var searchValue = $('#libSearch').val();
               // var db = "www_rl";
                let filterCheckboxesForReset = $('#facetAndFilter .checkbox input[type=checkbox]')
                e.preventDefault();
                filterCheckboxesForReset.each((i, el) => {
                    el.removeAttribute("checked");
                    console.log(el.checked);
                });
    			var getFilterval = $('#mfilters').attr('data-selected-filter', '');
                $('#filterHeader').removeClass('hidden');
                $('#mClearFilter').addClass('hidden');
    			getLibSearchResult(1, dataBase, searchValue, "", false);
            });


    function updateQueryStringParameter(uri, key, value) {
        var re = new RegExp("([?&])" + key + "=.*?(&|$)", "i");
        var separator = uri.indexOf('?') !== -1 ? "&" : "?";
        if (uri.match(re)) {
            return uri.replace(re, '$1' + key + "=" + value + '$2');
        }
        else {
            return uri + separator + key + "=" + value;
        }
    }

    var onLibSearchSubmitClick = function() {
        var field = 'q';
        //var inputParam = encodeURIComponent($("#libSearch").val());
        var inputParam = $("#libSearch").val();
        var newSrc = inputParam;
        var strlUrl = window.location.href;

        var endsWith = strlUrl.slice(strlUrl.length - 1, strlUrl.length)
        if (endsWith == "=") { strlUrl = strlUrl.concat("#"); } //encodedParam.slice(0, -1); }

        if ((strlUrl.indexOf('?' + field + '=') != -1) || (strlUrl.indexOf('&' + field + '=') != -1)) {
            var newURL = updateQueryStringParameter(strlUrl, field, newSrc);
        }
        else if (strlUrl.indexOf('?') != -1) {
            var newURL = strlUrl + "&q=" + newSrc;
        }
        else { var newURL = strlUrl + "?q=" + newSrc; }
        //window.location = newURL;
		//resourceSearchBar.getLibSearchResult(1, dataBase, encodeURIComponent($('#libSearch').val()), $('#mfilters').attr('data-selected-filter'),true);
        resourceSearchBar.getLibSearchResult(1, dataBase, $('#libSearch').val(), $('#mfilters').attr('data-selected-filter'),true);
    }
	function callLibSearch(db, searchValue) {
        var facetFilter =  $('#mfilters').attr('data-selected-filter');
        getLibSearchResult(1, db, searchValue, facetFilter,true);
    }
	function getParameterByName(name, url) {
        if (!url) url = window.location.href;
        name = name.replace(/[\[\]]/g, "\\$&");
        var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
            results = regex.exec(url);
        if (!results) return null;
        if (!results[2]) return '';
        return decodeURIComponent(results[2].replace(/\+/g, " "));
    };

	var clearLibFilters = function(type) {
		if (type == 'clear')
			$('#libSearch').val('');
		else
			$('#mfilters').attr('data-selected-filter', '');
        //var searchValue = encodeURIComponent($('#libSearch').val());
        var searchValue = $('#libSearch').val();
        getLibSearchResult(1, dataBase, searchValue, $('#mfilters').attr('data-selected-filter'),true);

		return false;

    }

    var clearSelectedFilter = function(facet, filter, db) {
        var getFilterval = $('#mfilters').attr('data-selected-filter');
        var clearHiddenFilter = facet + '@' + filter + ";";

        getFilterval = getFilterval.replace(clearHiddenFilter, "");
        $('#mfilters').attr('data-selected-filter', getFilterval);

       // var searchValue = encodeURIComponent($('#libSearch').val());
        var searchValue = $('#libSearch').val();
        getLibSearchResult(1, db, searchValue, $('#mfilters').attr('data-selected-filter'),false);
        return false;
    };
	var getFacetsFromPageURL = function() {
        var queries = {};
		var parameterArray = document.location.search.substr(1).split('&');
		var facetStrFromURL = '';
		if (undefined != parameterArray && parameterArray[0]  != '') {
			$.each(parameterArray, function(c,q){
				var i = q.split('=');
				queries[i[0].toString()] = i[1].toString();
			});
			$.each(queries,function(key,val){
				if (key.toLowerCase() == 'p') {
					facetStrFromURL += (decodeURI(val) != '' ? (decodeURI(val) + encodeURI("@MCAFEE_RB_PRODUCTS;")) : '');
				}
				if (key.toLowerCase() == 'pc') {
					facetStrFromURL += (decodeURI(val) != '' ? (decodeURI(val) + encodeURI("@MCAFEE_RB_PRODUCT_CATEGORIES;")) : '');
				}
				if (key.toLowerCase() == 'lang') {
					facetStrFromURL += (decodeURI(val) != '' ? (decodeURI(val) + encodeURI("@MCAFEE_RB_LANGUAGE;")) : '');
				}
				if (key.toLowerCase() == 'in') {
					facetStrFromURL += (decodeURI(val) != '' ? (decodeURI(val) + encodeURI("@MCAFEE_RB_INDUSTRIES;")) : '');
				}
				if (key.toLowerCase() == 'svc') {
					facetStrFromURL += (decodeURI(val) != '' ? (decodeURI(val) + encodeURI("@MCAFEE_RB_SERVICES;")) : '');
				}
				if (key.toLowerCase() == 'sc') {
					facetStrFromURL += (decodeURI(val) != '' ? (decodeURI(val) + encodeURI("@MCAFEE_RB_SOLUTIONS;")) : '');
				}
				if (key.toLowerCase() == 'ct') {
					facetStrFromURL += (decodeURI(val) != '' ? (decodeURI(val) + encodeURI("@MCAFEE_RB_CONTENTTYPE;")) : '');
				}
			});
		}
		return facetStrFromURL;
    };
	var displayLibPagination = function(db, resp, num, rows){
        var windowWidth = $(window).width();

		$('#totalResultCount').val(resp.TotalNumberOfResults);
        if(resp.TotalNumberOfResults <= rows) {
            $('#page-selection').hide();
			$('.pagination').hide();
            return;
        } else {
            $('#page-selection').show();
			$('.pagination').show();
        }
        $('#page-selection').bootpag({
            total: Math.ceil(resp.TotalNumberOfResults / rows),
            page: num,
            maxVisible: 3,
            leaps: false,
            next: $('#resourceAttributes').attr('data-next-pagination') + ' ›',
            prev: '‹ ' + $('#resourceAttributes').attr('data-previous-pagination'),
            showFirstLast: false
        });

        $('.bootpag').append('<li id="magic-line"></li>');
        $('#page-selection').find("li a").each(function () {
            var $magicLine = $($('#page-selection').find("li#magic-line"));
            if ($magicLine) {
                $magicLine
                    .width(jQuery('#page-selection' + " .bootpag .active").width())
                    .css("left", jQuery('#page-selection' + " .bootpag .active ").position().left)
                    .data("origLeft", $magicLine.position().left)
                    .data("origWidth", $magicLine.width());
            }

            return;
        }

        );

        function setActive() {
            var $magicLine = $($('#page-selection').find("li#magic-line"));
            $magicLine
                .width(jQuery(".bootpag .active").width())
                .css("left", jQuery(".bootpag .active ").position().left)
                .data("origLeft", $magicLine.position().left)
                .data("origWidth", $magicLine.width());
        }
        setActive();
        jQuery(window).on('resize', setActive);
        jQuery(".bootpag li").hover(function() {
            $el = jQuery(this);
            var $magicLine = $el.parent().find("#magic-line");
            leftPos = $el.position().left;
            newWidth = $el.width();
            $magicLine.stop().animate({
                left: leftPos,
                width: newWidth
            });
        }, function() {
            var $magicLine = jQuery(this).parent().find("#magic-line");
            $magicLine.stop().animate({
                left: $magicLine.data("origLeft"),
                width: $magicLine.data("origWidth")
            });
        });
    };

    return {
        getLibSearchResult: getLibSearchResult,
		callLibSearch : callLibSearch,
        onLibSearchSubmitClick : onLibSearchSubmitClick,
		getLibFacetsFilterResults : getLibFacetsFilterResults,
		clearLibFilters: clearLibFilters,
		displayLibPagination: displayLibPagination,
        clearSelectedFilter: clearSelectedFilter,
		createPerPage : createPerPage,
		createPageNoDropdown : createPageNoDropdown,
		getFacetsFromPageURL : getFacetsFromPageURL

    };
})();
$(document).ready(function(){
	if ($('#Case_Study').length > 0) {
		dataBase = $('#resourceAttributes').attr('data-site-param');
		resourceLibPageURL = document.location.protocol + "//" + document.location.hostname + document.location.pathname;
		//$('#Case_Study .search-form').hide();
		$('#libSearch').val('');
		allFacetsStrFromURL = resourceSearchBar.getFacetsFromPageURL();
		$('#mfilters').attr('data-selected-filter', allFacetsStrFromURL);
		resourceSearchBar.createPerPage();
		resourceSearchBar.createPageNoDropdown();
		$("#mpagefilter").change(function () {
			//var searchValue = encodeURIComponent($('#libSearch').val());
			var searchValue = $('#libSearch').val();
			resourceSearchBar.getLibSearchResult(1, dataBase, searchValue, $('#mfilters').attr('data-selected-filter'),false);
		});

		$('#page-selection').bootpag({
		});

		$('#page-selection').on("page", function(event, num){
			resourceSearchBar.getLibSearchResult(num, dataBase, ($('#libSearch').val()), $('#mfilters').attr('data-selected-filter'),false);
		});

		$(document).on('click', '#searchTipOverlayLink', function(e) {
                    e.preventDefault();
                    var vModal = document.getElementsByClassName('searchTipOverlayContainer');
                    for (i = 0; i < vModal.length; i++) {
                        vModal[i].style.display = 'block';
                    }

                    var vFade = document.getElementsByClassName('Tabfade');
                    for (i = 0; i < vFade.length; i++) {
                        vFade[i].style.display = 'block';
                    }
                });

                    $(document).on('click', '#searchTipOverlayContainerClose', function(e) {
                    e.preventDefault();
                    var vModal = document.getElementsByClassName('searchTipOverlayContainer');
                    for (i = 0; i < vModal.length; i++) {
                        vModal[i].style.display = 'none';
                    }

                    var vFade = document.getElementsByClassName('Tabfade');
                    for (i = 0; i < vFade.length; i++) {
                        vFade[i].style.display = 'none';
                    }
                });
		resourceSearchBar.callLibSearch(dataBase, ($('#libSearch').val()));
	}

});
function scrolllibUp()
{
window.scrollTo(200, 450);
}
function closeAllAccordians() {
    $(".panel-collapse").each(function() {
         var item = $(this).parent().parent().attr('data-selected-filter');
         if(item.includes('@'+ this.id)){
             $(this).parent().addClass('accordion-active');
         }
         if ($(this).parent().prop('className').indexOf("accordion-active") == -1) {
             $(this).slideUp(10);
         }
    });
}
﻿function updateMetaData() {
    var strlUrl = window.location.href;
    strlUrl = strlUrl.toLowerCase();
    strlUrl = strlUrl.split("/");
    strlUrl = strlUrl[strlUrl.length - 1];
    var arr = strlUrl.split('.');
    if (arr.length > 3) {
        if (arr[1] == "vutc") {
            if (($('#dnsData').attr('data-sub-vu') != '') && ($('#dnsData').attr('data-sub-vu') != undefined)) {
                var $meta = $('meta[name=description]').attr('content', $('#dnsData').attr('data-sub-vu') + $('#threatTitle').attr('data-title-vu'));
            }
            if (($('#threatTitle').attr('data-title-vu') != undefined) && ($('#tcTitleTag ').attr('data-vul-tag') != undefined) && ($('#titleTag').attr('data-title-tag') != undefined)) {
                document.title = $('#threatTitle').attr('data-title-vu') + ' - ' + $('#tcTitleTag ').attr('data-vul-tag') + ' - ' + $('#titleTag').attr('data-title-tag');
            }
        } else if (arr[1] == "intc") {
            if (($('#dnsData').attr('data-sub-int') != '') && ($('#dnsData').attr('data-sub-int') != undefined)) {
                var $meta = $('meta[name=description]').attr('content', $('#dnsData').attr('data-sub-int') + $('#threatTitle').attr('data-title-int'));
            }
            if (($('#threatTitle').attr('data-title-int') != undefined) && ($('#tcTitleTag ').attr('data-int-tag') !=undefined) && ($('#titleTag').attr('data-title-tag') != undefined)) {
                document.title = $('#threatTitle').attr('data-title-int') + ' - ' + $('#tcTitleTag ').attr('data-int-tag') + ' - ' + $('#titleTag').attr('data-title-tag');
            }
        } else if (arr[1] == "malwaretc") {
            if (($('#dnsData').attr('data-sub-mal') != '') && ($('#dnsData').attr('data-sub-mal') != undefined)) {
                var $meta = $('meta[name=description]').attr('content', $('#dnsData').attr('data-sub-mal') + $('#threatTitle').attr('data-title-mal'));
            }
            if (($('#threatTitle').attr('data-title-mal') != undefined) && ($('#tcTitleTag ').attr('data-mal-tag') != undefined) && ($('#titleTag').attr('data-title-tag') != undefined)) {
                document.title = $('#threatTitle').attr('data-title-mal') + ' - ' + $('#tcTitleTag ').attr('data-mal-tag') + ' - ' + $('#titleTag').attr('data-title-tag');
            }
        } else if (arr[1] == "iptc") {
            if (($('#dnsData').attr('data-sub-ip') != '') && ($('#dnsData').attr('data-sub-ip') != undefined)) {
                var $meta = $('meta[name=description]').attr('content', $('#dnsData').attr('data-sub-ip') + $('#threatTitle').attr('data-title-ip'));
            }
            if (($('#threatTitle').attr('data-title-ip') != undefined) && ($('#tcTitleTag ').attr('data-ip-tag') != undefined) && ($('#titleTag').attr('data-title-tag') != undefined)) {
                document.title = $('#threatTitle').attr('data-title-ip') + ' - ' + $('#tcTitleTag ').attr('data-ip-tag') + ' - ' + $('#titleTag').attr('data-title-tag');
            }
        } else if (arr[1] == "dnstc") {
            if (($('#dnsDataSub').attr('data-sub-dns') != '') && ($('#dnsDataSub').attr('data-sub-dns') != undefined)) {
                var $meta = $('meta[name=description]').attr('content', $('#dnsDataSub').attr('data-sub-dns') + $('#threatTitle').attr('data-title-dns'));
            }
            if (($('#threatTitle').attr('data-title-dns') != undefined) && ($('#tcTitleTag ').attr('data-dns-tag') != undefined) && ($('#titleTag').attr('data-title-tag') != undefined)) {
                document.title = $('#threatTitle').attr('data-title-dns') + ' - ' + $('#tcTitleTag ').attr('data-dns-tag') + ' - ' + $('#titleTag').attr('data-title-tag');
            }
        } else if (arr[1] == "domaintc") {
            if (($('#dnsData').attr('data-sub-domain') != '') && ($('#dnsData').attr('data-sub-domain') != undefined)) {
                var $meta = $('meta[name=description]').attr('content', $('#dnsData').attr('data-sub-domain') + $('#threatTitle').attr('data-title-domain'));
            }
            if (($('#threatTitle').attr('data-title-domain') != undefined) && ($('#tcTitleTag ').attr('data-domain-tag') != undefined) && ($('#titleTag').attr('data-title-tag') != undefined)) {
                document.title = $('#threatTitle').attr('data-title-domain') + ' - ' + $('#tcTitleTag ').attr('data-domain-tag') + ' - ' + $('#titleTag').attr('data-title-tag');
            }
        } else if (arr[1] == "websitetc") {
            if (($('#dnsData').attr('data-sub-web') != '') && ($('#dnsData').attr('data-sub-web') != undefined)) {
                var $meta = $('meta[name=description]').attr('content', $('#dnsData').attr('data-sub-web') + $('#threatTitle').attr('data-title-web'));
            }
            if (($('#threatTitle').attr('data-title-web') != undefined) && ($('#tcTitleTag ').attr('data-web-tag') != undefined) && ($('#titleTag').attr('data-title-tag') != undefined)) {
                document.title = $('#threatTitle').attr('data-title-web') + ' - ' + $('#tcTitleTag ').attr('data-web-tag') + ' - ' + $('#titleTag').attr('data-title-tag');
            }
        }
    }
};
$(document).ready(function() {
    updateMetaData();
});
var dataBase = '';
var threatSearchBar = (function(){
    var threatSearchServlet = '/corpcomsvc/search';
	var showMore = 'Show More';
    var showLess = 'Show Less';
	
	var didYoumean = function(newKeyword, db) {
        var strlUrl = window.location.href;
        var url = updateQueryStringParameter(strlUrl, 'q', newKeyword);
        var qValue = getParameterByName('q', url);
        $('#threatSearch').val(qValue);

        var field = 'q';
        var inputParam = encodeURIComponent($("#threatSearch").val());
        var newSrc = inputParam;
        var strlUrl = window.location.href;

        var endsWith = strlUrl.slice(strlUrl.length - 1, strlUrl.length)
        if (endsWith == "=") { strlUrl = strlUrl.concat("#"); }

        if ((strlUrl.indexOf('?' + field + '=') != -1) || (strlUrl.indexOf('&' + field + '=') != -1)) {
            var newURL = updateQueryStringParameter(strlUrl, field, newSrc);
        }
        else if (strlUrl.indexOf('?') != -1) {
            var newURL = strlUrl + "&q=" + newSrc;
        }
        else { var newURL = strlUrl + "?q=" + newSrc; }
        window.location = newURL;
        return true;
    };

    var getThreatSearchResult = function(num, db, searchValue) {
        $('html').animate({ scrollTop: $('#threat-search').offset().top }, 'slow');//IE, FF
        $('body').animate({ scrollTop: $('#threat-search').offset().top }, 'slow');
		var pageSize = $("#mpagefilter").val();
		if (undefined === pageSize) 
			pageSize = '10';
		pageSize = parseInt(pageSize);
		var start = (num == 1) ? 1 : (((num - 1) * pageSize) + 1);
		var maxVal = parseInt(start) + parseInt(pageSize) - 1 ;
		var totalCount = parseInt($('#totalResultCount').val());
		if (isNaN(totalCount))
			$('#totalResultCount').val("0");
		if (maxVal > $('#totalResultCount').val() && $('#totalResultCount').val() > 10)
			maxVal = $('#totalResultCount').val();
		var locale = "";
		if(window.location.href.indexOf("content/enterprise") > -1 || window.location.href.indexOf("content/sample_enterprise") > -1) {
			locale = window.location.pathname.split('/')[3];
		} else if(window.location.href.indexOf("enterprise") > -1 || window.location.href.indexOf("sample_enterprise") > -1) {
			locale = window.location.pathname.split('/')[2];
		} else {
			locale = 'en-us';
		}
		locale = (locale.indexOf('.html') > -1 ? locale.replace('.html', '') : locale);
		var url_string = window.location.href;
        var vectorName = getUrlParameter("v");
		var searchData = {
            'q': searchValue,
            'min': parseInt(start),
            'max': maxVal,
            'db': db,
            'getDBCount': 'true',
            'getfilters': 'true',
            'requestType': 'threatCenter',
            'locale': locale,
			'threatType': vectorName
        };

        $.ajax({
            dataType: "json",
            url: threatSearchServlet,
            data: searchData,
            crossDomain: true,
            contentType: "application/json; charset=utf-8",
            success: function(resp){
                displayThreatSearchResult(db, resp);
                displayThreatPagination(db, resp, num, pageSize);
            },
            error: function() {
            }
        }).always(function() {
            
        });
    };
	var createPerPage = function(){ 
		var dropDownHtml = '<span class="fake-select"><select id="mpagefilter" data-db=""></select></span>';
		$('#show-select').html($('#threatAttributes').attr('data-pagination-text').replace('{per-page-count}', dropDownHtml));
    }; 
	var createPageNoDropdown = function() {
		pageValArr = [];
		var pageValues = $('#threatAttributes').attr('data-pagination');
		if (pageValues === undefined || pageValues.length < 1) {
			pageValues = "10,20,50";
		}
		if (pageValues.length > 0) {
			pageValArr = pageValues.split(','); 
			$.each(pageValArr, function(i, val) {
				$('#mpagefilter').append("<option val='" + val + "'>" + val + "</option>");
			});
		}
	}
    function displayThreatSearchResult(db, resp) {
        var resultRows = '';

        if(resp != null && resp.SearchResult != null){
			if (resp.SearchResult[1].length > 0) {
				$.each( resp.SearchResult[1], function( i, val ) {


					resultRows +='<h3><a ';
					 if(typeof(val.dataid) != "undefined"){ 
						resultRows +=' data-id ="' + val.dataid + '"';
                     }
						resultRows +=' href="' + val.url + '" target="_top">' + val.title + '</a></h3>' +
						'<p>' + val.summary + 
						'<br><span style="color: #999">' + val.url + '</span><p>';


				});
			} else if (resp.DidYouMean != null && resp.DidYouMean != "") {
                resultRows +=
                    '<div id="didYouMean"><a href="#" class="reset-btn" style="color: black;text-decoration: none;cursor: none;">' + $('#threatAttributes').attr('data-suggestion-text') + '</a> <a href="#" class="reset-btn" style="cursor: pointer;" onclick="return threatSearchBar.didYoumean(\'' + resp.DidYouMean + '\', \'' + db + '\')">' + resp.DidYouMean + '</a> </div>';
            } else {
                resultRows += $('#threatAttributes').attr('data-noresult-text');

            }
            $('#mresults').html(resultRows);
			$('.row').sameHeight({
				elements: '.text-block',
				flexible: true,
				multiLine: true,
				biggestHeight:true
			});
        }
    }

    function updateQueryStringParameter(uri, key, value) {
        var re = new RegExp("([?&])" + key + "=.*?(&|$)", "i");
        var separator = uri.indexOf('?') !== -1 ? "&" : "?";
        if (uri.match(re)) {
            return uri.replace(re, '$1' + key + "=" + value + '$2');
        }
        else {
            return uri + separator + key + "=" + value;
        }
    }

    var onThreatSearchSubmitClick = function() {
        var field = 'q';
        var inputParam = encodeURIComponent($("#threatSearch").val());
        var newSrc = inputParam;
        var strlUrl = window.location.href;

        var endsWith = strlUrl.slice(strlUrl.length - 1, strlUrl.length)
        if (endsWith == "=") { strlUrl = strlUrl.concat("#"); } //encodedParam.slice(0, -1); }

        if ((strlUrl.indexOf('?' + field + '=') != -1) || (strlUrl.indexOf('&' + field + '=') != -1)) {
            var newURL = updateQueryStringParameter(strlUrl, field, newSrc);
        }
        else if (strlUrl.indexOf('?') != -1) {
            var newURL = strlUrl + "&q=" + newSrc;
        }
        else { var newURL = strlUrl + "?q=" + newSrc; }
        //window.location = newURL;
		threatSearchBar.getThreatSearchResult(1, dataBase, encodeURIComponent($('#threatSearch').val()));

    }
	function callThreatSearch(db, searchValue) {
        getThreatSearchResult(1, db, searchValue);
    }
	function getParameterByName(name, url) {
        if (!url) url = window.location.href;
        name = name.replace(/[\[\]]/g, "\\$&");
        var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
            results = regex.exec(url);
        if (!results) return null;
        if (!results[2]) return '';
        return decodeURIComponent(results[2].replace(/\+/g, " "));
    };

	var clearLibFilters = function(type) {
		if (type == 'clear')
			$('#threatSearch').val('');
        var searchValue = encodeURIComponent($('#threatSearch').val());
        getThreatSearchResult(1, dataBase, searchValue);
		return false;
    }
	var displayThreatPagination = function(db, resp, num, rows){
        var windowWidth = $(window).width();
		$('#totalResultCount').val(resp.TotalNumberOfResults[1]);
        if(resp.TotalNumberOfResults[1] <= rows) {
            $('#page-selection').hide();
			$('.pagination').hide();
            return;
        } else {
            $('#page-selection').show();
			$('.pagination').show();
        }
        $('#page-selection').bootpag({
            total: Math.ceil(resp.TotalNumberOfResults[1] / rows),
            page: num,
            maxVisible: 3,
            leaps: false,
            next: $('#threatAttributes').attr('data-next-pagination') + ' ›',
            prev: '‹ ' + $('#threatAttributes').attr('data-previous-pagination'),
            showFirstLast: false
        });

        $('.bootpag').append('<li id="magic-line"></li>');
        $('#page-selection').find("li a").each(function () {
            var $magicLine = $($('#page-selection').find("li#magic-line"));
            if ($magicLine) {
                $magicLine
                    .width(jQuery('#page-selection' + " .bootpag .active").width())
                    .css("left", jQuery('#page-selection' + " .bootpag .active ").position().left)
                    .data("origLeft", $magicLine.position().left)
                    .data("origWidth", $magicLine.width());
            }
            return;
        });

        function setActive() {
            var $magicLine = $($('#page-selection').find("li#magic-line"));
			if ($magicLine.length > 0) {
            $magicLine
                .width(jQuery(".bootpag .active").width())
                .css("left", jQuery(".bootpag .active ").position().left)
                .data("origLeft", $magicLine.position().left)
                .data("origWidth", $magicLine.width());
			}
        }
        setActive();
        jQuery(window).on('resize', setActive);
        jQuery(".bootpag li").hover(function() {
            $el = jQuery(this);
            var $magicLine = $el.parent().find("#magic-line");
            leftPos = $el.position().left;
            newWidth = $el.width();
            $magicLine.stop().animate({
                left: leftPos,
                width: newWidth
            });
        }, function() {
            var $magicLine = jQuery(this).parent().find("#magic-line");
            $magicLine.stop().animate({
                left: $magicLine.data("origLeft"),
                width: $magicLine.data("origWidth")
            });
        });
    };

    return {
        getThreatSearchResult: getThreatSearchResult,
		callThreatSearch : callThreatSearch,
        onThreatSearchSubmitClick : onThreatSearchSubmitClick,
		clearLibFilters: clearLibFilters,
		displayThreatPagination: displayThreatPagination,
        createPerPage : createPerPage,
		didYoumean: didYoumean,
        createPageNoDropdown : createPageNoDropdown

    };
})();
$(document).ready(function(){
	if ($('#threat-search').length > 0) {
		dataBase = $('#threatAttributes').attr('data-site-param');
		threatSearchBar.createPerPage();
		threatSearchBar.createPageNoDropdown();
		$("#mpagefilter").change(function () {
			var searchValue = encodeURIComponent($('#threatSearch').val());
			threatSearchBar.getThreatSearchResult(1, dataBase, searchValue);
		});

		
		$('#page-selection').bootpag({
		});

		$('#page-selection').on("page", function(event, num){
			threatSearchBar.getThreatSearchResult(num, dataBase, encodeURIComponent($('#threatSearch').val()));
		});
		var searchText = getUrlParameter("q");
		if (searchText != '')
			$('#threatSearch').val(searchText);
		threatSearchBar.callThreatSearch(dataBase, encodeURIComponent($('#threatSearch').val()));
	}
});





